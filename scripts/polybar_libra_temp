#!/usr/bin/env bash

# define a max function
max(){
    printf "%s\n" "$@" | sort -gr | head -n1
}

# format a temperature for printing
format_temp(){
    temp=$(printf "%.0f\n" $@)
    if [ "$temp" -lt "80" ]; then
        echo "%{F#aaffcc}$temp"°C
    else
        echo "%{F#ff612e}$temp"°C
    fi
}



while true; do

    # get sensors information
    sensors -j > /tmp/sensors.json 2>/dev/null

    # cpu temp
    cpu_temp_1=$(jq '. | with_entries(select(.key|match(".*k10temp-pci.*")))[]["Tctl"]["temp1_input"]' /tmp/sensors.json)
    cpu_temp_2=$(jq '. | with_entries(select(.key|match(".*k10temp-pci.*")))[]["Tdie"]["temp2_input"]' /tmp/sensors.json)
    cpu_temp_3=$(jq '. | with_entries(select(.key|match(".*k10temp-pci.*")))[]["Tccd1"]["temp3_input"]' /tmp/sensors.json)
    cpu_temp=$(max $cpu_temp_1 $cpu_temp_2 $cpu_temp_3)

    # gpu temp
    gpu_temp_1=$(jq '. | with_entries(select(.key|match(".*amdgpu.*")))[]["edge"]["temp1_input"]' /tmp/sensors.json)
    gpu_temp_2=$(jq '. | with_entries(select(.key|match(".*amdgpu.*")))[]["junction"]["temp2_input"]' /tmp/sensors.json)
    gpu_temp_3=$(jq '. | with_entries(select(.key|match(".*amdgpu.*")))[]["mem"]["temp3_input"]' /tmp/sensors.json)
    gpu_temp=$(max $gpu_temp_1 $gpu_temp_2 $gpu_temp_3)

    # format temps
    cpu_temp_format=$(format_temp $cpu_temp)
    gpu_temp_format=$(format_temp $gpu_temp)

    # print temps
    echo "$cpu_temp_format" "%{F#aaffcc}"/ "$gpu_temp_format"

    sleep 2

done
